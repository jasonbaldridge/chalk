{"name":"Chalk","tagline":"Chalk is a natural language processing library.","body":"# Chalk\r\n\r\nAuthor: **Jason Baldridge** (jasonbaldridge@gmail.com)\r\n\r\n## Introduction\r\n\r\nChalk is a library for natural language processing (NLP). It is based on the [OpenNLP](http://opennlp.apache.org/) library, but will be transitioning to more use of Scala (rather than Java) as new capabilities are added.\r\n\r\nThe name Chalk comes from my son's stuffed elephant. \"Chalk\" obviously has a great connection to writing (and thus text processing). Of course, it also follows the what-your-kid-called-his-elephant naming convention precedent established with Hadoop. :)\r\n\r\n## Using Chalk\r\n\r\nThe latest stable release is 1.1.0. \r\n\r\nIn SBT:\r\n\r\n    libraryDependencies += \"com.jasonbaldridge\" % \"chalk\" % \"1.1.0\"\r\n\r\nIn Maven:\r\n\r\n    <dependency>\r\n       <groupId>com.jasonbaldridge</groupId>\r\n       <artifactId>chalk</artifactId>\r\n       <version>1.1.0</version>\r\n    </dependency>\r\n\r\n## Requirements\r\n\r\n* Version 1.6 of the Java 2 SDK (http://java.sun.com)\r\n\r\n## Configuring your environment variables\r\n\r\nThe easiest thing to do is to set the environment variables `JAVA_HOME`\r\nand `CHALK_DIR` to the relevant locations on your system. Set `JAVA_HOME`\r\nto match the top level directory containing the Java installation you\r\nwant to use.\r\n\r\nNext, add the directory `CHALK_DIR/bin` to your path. For example, you\r\ncan set the path in your `.bashrc` file as follows:\r\n\r\n\texport PATH=$PATH:$CHALK_DIR/bin\r\n\r\nOnce you have taken care of these three things, you should be able to\r\nbuild and use Chalk.\r\n\r\n\r\n## Building the system from source\r\n\r\nChalk uses SBT (Simple Build Tool) with a standard directory\r\nstructure.  To build Chalk, type (in the `CHALK_DIR` directory):\r\n\r\n\t$ ./build update compile\r\n\r\nThis will compile the source files and put them in\r\n`./target/classes`. If this is your first time running it, you will see\r\nmessages about Scala being downloaded -- this is fine and\r\nexpected. Once that is over, the Chalk code will be compiled.\r\n\r\nTo try out other build targets, do:\r\n\r\n\t$ ./build\r\n\r\nThis will drop you into the SBT interface. To see the actions that are\r\npossible, hit the TAB key. (In general, you can do auto-completion on\r\nany command prefix in SBT, hurrah!)\r\n\r\nTo make sure all the tests pass, do:\r\n\r\n\t$ ./build test\r\n\r\nDocumentation for SBT is at <http://www.scala-sbt.org/>\r\n\r\nNote: if you have SBT already installed on your system, you can\r\nalso just call it directly with \"sbt\" in `CHALK_DIR`.\r\n\r\n\r\n## Trying it out\r\n\r\nAssuming you have completed all of the above steps, including running the \"compile\" action in SBT, you should now be able to try out some examples. There is no documentation specific to Chalk at this time, but you should be able to follow the OpenNLP documentation:\r\n\r\n<http://opennlp.apache.org/documentation/1.5.2-incubating/manual/opennlp.html>\r\n\r\nHowever, you'll need to substitute 'chalk cli' for 'opennlp' in that manual. Here's an example to do sentence detection.\r\n\r\n        $ echo \"Pierre Vinken, 61 years old, will join the board as a nonexecutive director Nov. 29. Mr. Vinken is chairman of Elsevier N.V., the Dutch publishing group. Rudolph Agnew, 55 years old and former chairman of Consolidated Gold Fields PLC, was named a director of this British industrial conglomerate.\" > input.txt\r\n \r\n        $ wget http://opennlp.sourceforge.net/models-1.5/en-sent.bin\r\n\r\n        $ chalk cli SentenceDetector en-sent.bin < input.txt \r\n        Loading Sentence Detector model ... done (0.099s)\r\n        Pierre Vinken, 61 years old, will join the board as a nonexecutive director Nov. 29.\r\n        Mr. Vinken is chairman of Elsevier N.V., the Dutch publishing group.\r\n        Rudolph Agnew, 55 years old and former chairman of Consolidated Gold Fields PLC, was named a director of this British industrial conglomerate.\r\n\r\n\r\n\r\n        Average: 1500.0 sent/s \r\n        Total: 3 sent\r\n        Runtime: 0.0020s\r\n\r\nHere's an example of doing sentence detection via the API by using the Scala console in SBT.\r\n\r\n```\r\n$ cd /tmp\r\n$ wget http://opennlp.sourceforge.net/models-1.5/en-sent.bin\r\n$ cd $CHALK_DIR\r\n$ ./build\r\n> console\r\nscala> import java.io.FileInputStream\r\nimport java.io.FileInputStream\r\n\r\nscala> import chalk.tools.sentdetect._\r\nimport chalk.tools.sentdetect._\r\n\r\nscala> val sdetector = new SentenceDetectorME(new SentenceModel(new FileInputStream(\"/tmp/en-sent.bin\")))\r\nsdetector: chalk.tools.sentdetect.SentenceDetectorME = chalk.tools.sentdetect.SentenceDetectorME@74dd590f\r\n\r\nscala> val sentences = sdetector.sentDetect(\"Here is a sentence. Here is another with Mr. Brown in it. Hurrah.\")\r\nsentences: Array[java.lang.String] = Array(Here is a sentence., Here is another with Mr. Brown in it., Hurrah.)\r\n\r\nscala> sentences.foreach(println)\r\nHere is a sentence.\r\nHere is another with Mr. Brown in it.\r\nHurrah.\r\n```\r\n\r\n# Questions or suggestions?\r\n\r\nEmail Jason Baldridge: <jasonbaldridge@gmail.com>\r\n\r\nOr, create an issue: <https://github.com/jasonbaldridge/chalk/issues>\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}